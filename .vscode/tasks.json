{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Load Project (Debug)",
            "type": "shell",
            "command": "bash",
            "args": [
                "-l",
                "-c",
                "( if [[ $(pwd) =~ ^/mnt ]]; then cmd.exe /c \" ( if not exist build (mkdir build ) ) & cd build & cmake .. \"; else mkdir -p build/Debug && cd build/Debug && cmake ../.. -DCMAKE_BUILD_TYPE=Debug; fi )"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": "build",
            "problemMatcher": "$gcc",
            "windows": {
                "command": "cmd.exe",
                "args": [
                    "/c",
                    "( if not exist build (mkdir build ) ) & cd build & cmake .. "
                ],
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "problemMatcher": "$msCompile",
            }
        },
        {
            "label": "Load Project (Release)",
            "type": "shell",
            "command": "bash",
            "args": [
                "-l",
                "-c",
                "( if [[ $(pwd) =~ ^/mnt ]]; then cmd.exe /c \" ( if not exist build (mkdir build ) ) & cd build & cmake .. \"; else mkdir -p build/Release && cd build/Release && cmake ../.. -DCMAKE_BUILD_TYPE=Release; fi )"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": "build",
            "problemMatcher": "$gcc",
            "windows": {
                "command": "cmd",
                "args": [
                    "/c",
                    "( if not exist build (mkdir build ) ) & cd build & cmake .."
                ],
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "problemMatcher": "$msCompile",
            }
        },
        {
            "label": "Build Project (Debug)",
            "type": "shell",
            "command": "bash",
            "args": [
                "-l",
                "-c",
                "( if [[ $(pwd) =~ ^/mnt ]]; then cmd.exe /c \" cmake --build build --config Debug --parallel %NUMBER_OF_PROCESSORS% \"; else cmake --build build/Debug --config Debug --parallel $(nproc); fi )"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": "build",
            "problemMatcher": "$gcc",
            "windows": {
                "command": "cmd",
                "args": [
                    "/c",
                    "(if not exist build (mkdir build && cd build && cmake ..) ) & cmake --build build --parallel %NUMBER_OF_PROCESSORS%"
                ],
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "problemMatcher": "$msCompile",
            }
        },
        {
            "label": "Build Project (Release)",
            "type": "shell",
            "command": "bash",
            "args": [
                "-l",
                "-c",
                "( if [[ $(pwd) =~ ^/mnt ]]; then cmd.exe /c \" cmake --build build --config Release --parallel %NUMBER_OF_PROCESSORS% \"; else cmake --build build/Release --config Release --parallel $(nproc); fi )"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": "build",
            "problemMatcher": "$gcc",
            "windows": {
                "command": "cmd",
                "args": [
                    "/c",
                    "(if not exist build (mkdir build && cd build && cmake ..) ) & cmake --build build --config Release --parallel %NUMBER_OF_PROCESSORS%"
                ],
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "problemMatcher": "$msCompile",
            }
        },
        {
            "label": "Load And Build Project (Debug)",
            "type": "shell",
            "command": "echo",
            "args": [
                "Load And Build Project (Debug) - Done",
            ],
            "group": "build",
            "dependsOn": [
                "Load Project (Debug)",
                "Build Project (Debug)"
            ],
            "dependsOrder": "sequence",
        },
        {
            "label": "Load And Build Project (Release)",
            "type": "shell",
            "command": "echo",
            "args": [
                "Load And Build Project (Release) - Done",
            ],
            "group": "build",
            "dependsOn": [
                "Load Project (Release)",
                "Build Project (Release)"
            ],
            "dependsOrder": "sequence",
        },
        {
            "label": "Run Demo (Debug)",
            "type": "shell",
            "command": "bash",
            "args": [
                "-l",
                "-c",
                "( if [[ $(pwd) =~ ^/mnt ]]; then ./1-capture_grab.exe; else ./1-capture_grab; fi )"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build/Debug"
            },
            "group": "build",
            "problemMatcher": "$gcc",
            "dependsOn": [
                "Build Project (Debug)"
            ],
            "windows": {
                "command": ".\\1-capture_grab.exe",
                "problemMatcher": "$msCompile",
            }
        },
        {
            "label": "Run Demo (Release)",
            "type": "shell",
            "command": "bash",
            "args": [
                "-l",
                "-c",
                "( if [[ $(pwd) =~ ^/mnt ]]; then ./1-capture_grab.exe; else ./1-capture_grab; fi )"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build/Release"
            },
            "group": "build",
            "problemMatcher": "$gcc",
            "dependsOn": [
                "Build Project (Release)"
            ],
            "windows": {
                "command": ".\\1-capture_grab.exe",
                "problemMatcher": "$msCompile",
            }
        },
        {
            "label": "Clean Project",
            "type": "shell",
            "command": "bash",
            "args": [
                "-l",
                "-c",
                "git clean -fdx build || rm -rf build"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": "build",
            "problemMatcher": "$gcc",
            "windows": {
                "command": "cmd",
                "args": [
                    "/c",
                    "git clean -fdx build || rmdir /s /q build"
                ],
                "options": {
                    "cwd": "${workspaceFolder}"
                }
            }
        }
    ]
}